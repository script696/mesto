{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto/./src/components/Card.js","webpack://mesto/./src/components/FormValidator.js","webpack://mesto/./src/components/Section.js","webpack://mesto/./src/components/Popup.js","webpack://mesto/./src/components/PopupWithImage.js","webpack://mesto/./src/components/PopupWithForm.js","webpack://mesto/./src/components/UserInfo.js","webpack://mesto/./src/components/PopupWithConfirmation.js","webpack://mesto/./src/utils/constants.js","webpack://mesto/./src/components/Api.js","webpack://mesto/./src/pages/index.js"],"sourcesContent":["class Card {\r\n\r\n  constructor({ item,\r\n    cardsTemplateSelector,\r\n    openPopupWithImg,\r\n    openPopupWithConfirmation,\r\n    apiCardsLike,\r\n    userId,\r\n  }) {\r\n    this._cardLink = item.link;\r\n    this._cardName = item.name;\r\n\r\n    this._cardSelector = cardsTemplateSelector;\r\n\r\n    this._handleCardClick = openPopupWithImg;\r\n    this._apiCardsLike = apiCardsLike;\r\n    this._confirmCardRemovement = openPopupWithConfirmation;\r\n\r\n    this._userId = userId;\r\n    this._cardOwnerId = item.owner._id;\r\n    this._isUserCard = this._userId === this._cardOwnerId;\r\n\r\n    this._cardGarbagedeactivateSelector = 'card__garbage_inactive'\r\n\r\n    this._cardId = item._id;\r\n    this._cardLikes = item.likes;\r\n    this._cardLikeOwner = item.owner;\r\n\r\n  }\r\n\r\n  _checkUserLike() {\r\n    this._isLiked = this._cardLikes.some(likeData => likeData._id === this._userId)\r\n  }\r\n\r\n  _getTemplate() {\r\n    const cardElement = document\r\n      .querySelector(this._cardSelector)\r\n      .content\r\n      .querySelector('.card')\r\n      .cloneNode(true);\r\n\r\n    return cardElement;\r\n  }\r\n\r\n  generateCard() {\r\n\r\n    this._element = this._getTemplate();\r\n    this._image = this._element.querySelector('.card__img')\r\n    this._name = this._element.querySelector('.card__place-name')\r\n    this._likeHeart = this._element.querySelector('.card__logo-heart');\r\n    this._cardGarbage = this._element.querySelector('.card__garbage');\r\n    this._likeCounter = this._element.querySelector('.card__like-counter');\r\n\r\n    this._setEventListeners();\r\n\r\n    this._image.src = this._cardLink;\r\n\r\n    this._image.alt = this._cardName;\r\n    this._name.textContent = this._cardName;\r\n\r\n    this._countLikes()\r\n\r\n    this._checkUserLike()\r\n    this._fullfilledLikeLHeart()\r\n\r\n    if (!this._isUserCard) this._cardGarbage.classList.add(this._cardGarbagedeactivateSelector)\r\n\r\n    return this._element;\r\n  }\r\n\r\n\r\n  _countLikes() {\r\n    this._likeCounter.textContent = this._cardLikes.length\r\n  }\r\n\r\n  _fullfilledLikeLHeart() {\r\n    this._likeHeart.classList.toggle('card__logo-heart_style_filled', this._isLiked)\r\n\r\n    this._isLiked = !this._isLiked\r\n  }\r\n\r\n  handleCardLike(res) {\r\n    this._cardLikes = res.likes\r\n    this._countLikes()\r\n    this._fullfilledLikeLHeart()\r\n  }\r\n\r\n  removeCardElement() {\r\n    this._element.remove();\r\n    this._element = null;\r\n  }\r\n\r\n  _setEventListeners() {\r\n\r\n    this._image\r\n      .addEventListener('click', (e) => {\r\n        this._handleCardClick(e.target.src, e.target.alt)\r\n      });\r\n\r\n    this._element.querySelector('.card__logo-heart')\r\n      .addEventListener('click', () => {\r\n        this._apiCardsLike(this, this._isLiked, this._cardId)\r\n      });\r\n\r\n    this._element.querySelector('.card__garbage')\r\n      .addEventListener('click', () => {\r\n        this._confirmCardRemovement(this)\r\n      })\r\n  }\r\n\r\n  getCardId() {\r\n    return this._cardId\r\n  }\r\n}\r\n\r\nexport default Card;\r\n\r\n\r\n\r\n","class FormValidator {\r\n\r\n  constructor(data, formElement) {\r\n    this._formSelector = data.formSelector;\r\n    this._inputSelector = data.inputSelector;\r\n    this._submitButtonSelector = data.submitButtonSelector;\r\n    this._inactiveButtonClass = data.inactiveButtonClass;\r\n    this._inputErrorClass = data.inputErrorClass;\r\n    this._errorClass = data.errorClass;\r\n\r\n    this._formElement = formElement;\r\n\r\n    this._inputList = [...this._formElement.querySelectorAll(this._inputSelector)];\r\n    this._buttonElement = this._formElement.querySelector(this._submitButtonSelector);\r\n\r\n  }\r\n\r\n  enableValidation() {\r\n\r\n    this._setEventListeners();\r\n\r\n  };\r\n\r\n  _setEventListeners() {\r\n\r\n    this.toggleButtonState();\r\n    this._inputList.forEach(inputElement => {\r\n      inputElement.addEventListener('input', () => {\r\n        this._checkInputValidity(inputElement);\r\n        this.toggleButtonState();\r\n      });\r\n    });\r\n  };\r\n\r\n  toggleButtonState() {\r\n    if (this._hasInvalidInput()) {\r\n      this._buttonElement.classList.add(this._inactiveButtonClass)\r\n      this._buttonElement.setAttribute('disabled', true);\r\n\r\n    } else {\r\n      this._buttonElement.classList.remove(this._inactiveButtonClass)\r\n      this._buttonElement.removeAttribute('disabled');\r\n\r\n    }\r\n  }\r\n\r\n  _checkInputValidity = (inputElement) => {\r\n    if (!inputElement.validity.valid) {\r\n      this._showInputError(inputElement, inputElement.validationMessage);\r\n    } else {\r\n      this._hideInputError(inputElement);\r\n    }\r\n  };\r\n\r\n  _showInputError(inputElement, errorMessage) {\r\n    const errorElement = this._formElement.querySelector(`.${inputElement.id}-error`);\r\n\r\n    inputElement.classList.add(this._inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(this._errorClass);\r\n  };\r\n\r\n  _hideInputError(inputElement) {\r\n    const errorElement = this._formElement.querySelector(`.${inputElement.id}-error`);\r\n    inputElement.classList.remove(this._inputErrorClass);\r\n    errorElement.classList.remove(this._errorClass);\r\n    errorElement.textContent = '';\r\n  };\r\n\r\n  _hasInvalidInput() {\r\n    return this._inputList.some(inputElement => !inputElement.validity.valid)\r\n  }\r\n}\r\n\r\nexport default FormValidator\r\n\r\n\r\n","class Section {\r\n  constructor({renderer, cardsContainerSelector}) {\r\n    this._renderer = renderer;\r\n    this._container = document.querySelector(cardsContainerSelector);\r\n  }\r\n\r\n  addItem(element) {\r\n    this._container.append(element);\r\n  }\r\n\r\n  prependItem(element) {\r\n    this._container.prepend(element);\r\n  }\r\n\r\n  rendererItems(items, userData) {\r\n    items.forEach(item => {\r\n      this._renderer(item, userData)\r\n    });\r\n  }\r\n}\r\n\r\nexport default Section","class Popup {\r\n  constructor(popupSelector) {\r\n    this._popupSelector = popupSelector;\r\n    this._element = document.querySelector(this._popupSelector);\r\n    this._popupCloseButton = this._element.querySelector('.popup__close-button');\r\n  }\r\n\r\n  _handleEscClose = (e) => {\r\n    if (e.key === 'Escape') {\r\n      this.close()\r\n    }\r\n  }\r\n\r\n  setEventListeners() {\r\n    this._popupCloseButton.addEventListener('click', () => this.close())\r\n\r\n    this._element.addEventListener('mousedown', (e) => {\r\n      if (e.target.matches(this._popupSelector)) this.close()\r\n    })\r\n  }\r\n\r\n  open() {\r\n    this._element.classList.add('popup_opend');\r\n\r\n    document.addEventListener('keydown', this._handleEscClose)\r\n  }\r\n\r\n  close() {\r\n    this._element.classList.remove('popup_opend');\r\n\r\n    document.removeEventListener('keydown', this._handleEscClose)\r\n  }\r\n}\r\n\r\nexport default Popup","import Popup from \"./Popup.js\";\r\n\r\nclass PopupWithImage extends Popup {\r\n  constructor(popupSelector) {\r\n    super(popupSelector)\r\n    this._figureImage = this._element.querySelector('.figure__img');\r\n    this._figureName = this._element.querySelector('.figure__name');\r\n  }\r\n\r\n  open = (imageLink, imageText) => {\r\n    super.open()\r\n    this._figureImage.src = imageLink;\r\n    this._figureImage.alt = imageText;\r\n    this._figureName.textContent = imageText;\r\n  }\r\n}\r\n\r\nexport default PopupWithImage;","import Popup from \"./Popup.js\";\r\n\r\nclass PopupWithForm extends Popup {\r\n  constructor(popupSelector, handleProfileFormSubmit) {\r\n    super(popupSelector)\r\n    this._handleProfileFormSubmit = handleProfileFormSubmit;\r\n    this._form = this._element.querySelector('.form');\r\n    this._inputList = this._element.querySelectorAll('.form__text');\r\n    this._popupSubmitButton = this._element.querySelector('.form__button');\r\n    this._popupSubmitButtonAltText = 'Сохранение...'\r\n    this._formValues = {};\r\n\r\n  }\r\n\r\n  _getInputValues() {\r\n    this._inputList.forEach(input => {\r\n      this._formValues[input.name] = input.value;\r\n    });\r\n\r\n    return this._formValues;\r\n  }\r\n\r\n  switchButtonText(){\r\n    [this._popupSubmitButton.textContent, this._popupSubmitButtonAltText] = [this._popupSubmitButtonAltText, this._popupSubmitButton.textContent]\r\n\r\n  }\r\n\r\n  setInputValues(data) {\r\n    this._inputList.forEach(input => input.value = data[input.name]);\r\n  }\r\n\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners()\r\n\r\n    this._form.addEventListener('submit', (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      this._handleProfileFormSubmit(this._getInputValues());\r\n\r\n    })\r\n  }\r\n\r\n\r\n  close() {\r\n    this._form.reset()\r\n\r\n    super.close()\r\n  }\r\n}\r\n\r\nexport default PopupWithForm;","class UserInfo {\r\n  constructor(nameSelector, aboutSelector, avatarSelector) {\r\n    this._nameSelector = nameSelector;\r\n    this._aboutSelector = aboutSelector;\r\n    this._avatarSelector = avatarSelector;\r\n    this._profileNameElement = document.querySelector(this._nameSelector)\r\n    this._profileAboutElement = document.querySelector(this._aboutSelector)\r\n    this._profileAvatarElement = document.querySelector(this._avatarSelector)\r\n    this._profileData = {}\r\n  }\r\n\r\n  getUserInfo() {\r\n\r\n    this._profileData['form__text_type_name'] = this._profileNameElement.textContent;\r\n    this._profileData['form__text_type_about'] = this._profileAboutElement.textContent;\r\n\r\n    return this._profileData\r\n  }\r\n\r\n  setUserInfo({ name, about, _id, avatar }) {\r\n    this._profileNameElement.textContent = name;\r\n    this._profileAboutElement.textContent = about;\r\n    this._userId = _id;\r\n    this._profileAvatarElement.src = avatar;\r\n\r\n  }\r\n\r\n  getUserId() {\r\n    return this._userId;\r\n  }\r\n\r\n  editProfileAvatar(link) {\r\n    this._profileAvatarElement.src = link;\r\n  }\r\n}\r\n\r\nexport default UserInfo","import Popup from \"./Popup.js\";\r\n\r\nclass PopupWithConfirmation extends Popup {\r\n  constructor(popupSelector, deleteCard) {\r\n    super(popupSelector)\r\n    this._deleteCard = deleteCard;\r\n\r\n  }\r\n\r\n  setEventListeners() {\r\n    super.setEventListeners()\r\n\r\n    this._element.addEventListener('submit', (e) => {\r\n\r\n      e.preventDefault();\r\n\r\n      this._deleteCard(this._currentCard)\r\n      this.close()\r\n    })\r\n   \r\n  }\r\n\r\n  setCurrentCard(currentCard) {\r\n    this._currentCard = currentCard;\r\n  }\r\n}\r\n\r\nexport default PopupWithConfirmation;","export const editProfileButton = document.querySelector('.profile-info__edit-button');\r\nexport const editAvatarButton = document.querySelector('.profile-info__avatar-wrapper');\r\nexport const addCardButton = document.querySelector('.profile-info__add-button');\r\n\r\nexport const formProfileElement = document.querySelector('.form_target_profile');\r\nexport const formAddCardElement = document.querySelector('.form_target_cards');\r\n\r\nexport const cardsContainerSelector = '.cards';\r\n\r\nexport const cardsTemplateSelector = '.card-template';\r\n\r\nexport const options = {\r\n  inputSelector: '.form__text',\r\n  submitButtonSelector: '.form__button',\r\n  inactiveButtonClass: 'button_inactive',\r\n  inputErrorClass: 'form__text_type_error',\r\n  errorClass: 'form__text-error_active'\r\n}\r\n\r\n","class Api {\r\n  constructor({ id, headers }) {\r\n    this._id = id;\r\n    this._headers = headers;\r\n  }\r\n\r\n  _getResponseData(res) {\r\n    if (!res.ok) {\r\n      return Promise.reject(`Ошибка: ${res.status}`);\r\n    }\r\n    return res.json();\r\n  }\r\n\r\n  getUserInfo() {\r\n    return fetch(`${this._id}/users/me`, {\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._getResponseData(res))\r\n  }\r\n\r\n  getInitialCards() {\r\n    return fetch(`${this._id}/cards`, {\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._getResponseData(res))\r\n  }\r\n\r\n  modifyProfile(name, about) {\r\n    return fetch(`${this._id}/users/me`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about,\r\n      })\r\n    })\r\n      .then(res => this._getResponseData(res))\r\n  }\r\n\r\n\r\n  addNewCard(name, link) {\r\n    return fetch(`${this._id}/cards`, {\r\n      method: 'POST',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        link,\r\n      })\r\n    })\r\n      .then(res => this._getResponseData(res))\r\n  }\r\n\r\n  deleteCard(cardId) {\r\n    return fetch(`${this._id}/cards/${cardId}`, {\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    }\r\n    )\r\n      .then(res => this._getResponseData(res))\r\n  }\r\n\r\n  toggleLike(cardId, method) {\r\n    return fetch(`${this._id}/cards/${cardId}/likes`, {\r\n      method: method,\r\n      headers: this._headers,\r\n    })\r\n      .then(res => this._getResponseData(res))\r\n  }\r\n\r\n  editAvatar(avatar) {\r\n    return fetch(`${this._id}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        avatar,\r\n      })\r\n    })\r\n      .then(res => this._getResponseData(res))\r\n  }\r\n}\r\n\r\nexport default Api","import Card from '../components/Card.js';\r\nimport FormValidator from '../components/FormValidator.js';\r\nimport Section from '../components/Section.js';\r\nimport PopupWithImage from '../components/PopupWithImage.js';\r\nimport PopupWithForm from '../components/PopupWithForm.js';\r\nimport UserInfo from '../components/UserInfo.js';\r\nimport PopupWithConfirmation from '../components/PopupWithConfirmation.js';\r\nimport {\r\n  editProfileButton,\r\n  addCardButton,\r\n  cardsContainerSelector,\r\n  options,\r\n  cardsTemplateSelector,\r\n  editAvatarButton,\r\n} from '../utils/constants.js';\r\nimport './index.css';\r\nimport Api from '../components/Api.js'\r\n\r\n\r\n\r\n\r\nconst formValidators = [...document.querySelectorAll('.form')]\r\n\r\n  .reduce((accum, formElement) => {\r\n\r\n    const validator = new FormValidator(options, formElement);\r\n    validator.enableValidation();\r\n\r\n    const formName = formElement.name;\r\n\r\n    accum[formName] = validator;\r\n\r\n    return accum\r\n  }, {})\r\n\r\n\r\n\r\n/** \r\n * @description Создает экземпляр класса Card\r\n * @param {object} nameLinkData - Объект с именем карточки и ссылкой\r\n * @param {string} templateName - Шаблон карточки\r\n * @param {object} fooData - Объект с функциями\r\n * @return {object} - DOM элемент с карточкой\r\n * \r\n*/\r\nconst createCard = (data) => {\r\n  const card = new Card(data)\r\n\r\n  return card.generateCard();\r\n}\r\n\r\n\r\n/** \r\n * @description При клике по лайку проверяет была ли уже лайкнута карточка и\r\n * если да, выполняет запрос на сервер для добавления лайка\r\n * если нет, выполняет запрос на сервер для удаления лайка\r\n * @param {object} card - Объект карточки\r\n * @param {boolean} isILiked - Лайкнута ли карточка пользователем\r\n * @param {string} cardId- Id карточки\r\n * \r\n*/\r\nconst apiCardsLike = (card, isILiked, cardId) => {\r\n\r\n  if (isILiked) {\r\n    api.toggleLike(cardId, 'PUT')\r\n      .then(res => card.handleCardLike(res))\r\n      .catch(err => console.error(err))\r\n  }\r\n  else {\r\n    api.toggleLike(cardId, 'DELETE')\r\n      .then(res => card.handleCardLike(res))\r\n      .catch(err => console.error(err))\r\n  }\r\n}\r\n\r\n/** \r\n * @description Удаляет элемент карточки\r\n * @param {object} currentCard - Объект карточки\r\n * \r\n*/\r\nconst deleteCard = (currentCard) => {\r\n  const cardId = currentCard.getCardId()\r\n  api.deleteCard(cardId)\r\n    .then(res => {\r\n      currentCard.removeCardElement()\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\n\r\n/** \r\n * @description Вызывается в момент сабмита формы редактирования профиля,\r\n * получает данные из формы, введенные пользователем,\r\n * отправляет запрос на сервер методом PATCH,\r\n * в случае успешного ответа записывает данные в поля\r\n * @param {object} inputData - Объект с данными из формы, введенные пользователем\r\n*/\r\nconst handleProfileFormSubmit = ({ form__text_type_name: name, form__text_type_about: about }) => {\r\n  popupEditProfile.switchButtonText()\r\n\r\n  api.modifyProfile(name, about)\r\n    .then(data => {\r\n      userInfo.setUserInfo(data)\r\n      popupEditProfile.close()\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => {\r\n      popupEditProfile.switchButtonText()\r\n    })\r\n};\r\n\r\n/** \r\n * @description Вызывается в момент сабмита формы добавления карточки,\r\n * получает данные из формы, введенные пользователем,\r\n * создает экземпляр класса Section,\r\n * вызывает метод rendererItems, добавляя новую карточку\r\n * @param {object} inputData - Объект с данными из формы, введенные пользователем\r\n*/\r\nconst handleAddCardFormSubmit = ({ form__text_type_name: name, form__text_type_about: link }) => {\r\n  const userId = userInfo.getUserId();\r\n  popupAddCard.switchButtonText()\r\n\r\n  api.addNewCard(name, link)\r\n    .then(item => {\r\n      const cardElement = createCard({ item, cardsTemplateSelector, openPopupWithImg, openPopupWithConfirmation, apiCardsLike, userId });\r\n      sectionRenderer.prependItem(cardElement)\r\n      popupAddCard.close()\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => {\r\n      popupAddCard.switchButtonText()\r\n    })\r\n}\r\n\r\n\r\n/** \r\n * @description Вызывается в момент сабмита формы редактирования,\r\n * получает данные из формы, введенные пользователем,\r\n * создает экземпляр класса Section,\r\n * вызывает метод rendererItems, добавляя новую карточку\r\n * @param {object} inputData - Объект с данными из формы, введенные пользователем\r\n*/\r\nconst handleAvatarFormSubmit = ({ form__text_type_about: avatar }) => {\r\n  popupEditAvatar.switchButtonText()\r\n\r\n  api.editAvatar(avatar)\r\n    .then(res => {\r\n      userInfo.editProfileAvatar(avatar)\r\n      popupEditAvatar.close()\r\n    })\r\n    .catch(err => console.error(err))\r\n    .finally(() => {\r\n      popupEditAvatar.switchButtonText()\r\n    })\r\n}\r\n\r\n\r\n\r\n/** \r\n * @description Вызывается в нажатия на корзину удаления карточки,\r\n * открывает попап подтверждения удаления\r\n * @param {object} currentCard - Объект карточки\r\n*/\r\nconst openPopupWithConfirmation = (currentCard) => {\r\n  popupWithConfirmation.open()\r\n  popupWithConfirmation.setCurrentCard(currentCard)\r\n}\r\n\r\n\r\n/** \r\n * @description Вызывается в нажатия на карточку,\r\n * открывает попап полноэкранного отображения карточки\r\n * @param {object} currentCard - Объект карточки\r\n*/\r\nconst openPopupWithImg = (imageLink, imageText) => {\r\n  popupWithImgObj.open(imageLink, imageText)\r\n}\r\n\r\n\r\n\r\n/** \r\n * @description Рендерит страницу при перезагрузке\r\n * делает запросы\r\n * информации пользователя, карточек\r\n * записывает данные в инстанс класса userInfo\r\n * рендерит страницу\r\n * \r\n*/\r\nconst renderPage = () => {\r\n  Promise.all([\r\n    api.getUserInfo(),\r\n    api.getInitialCards(),\r\n  ])\r\n    .then(([{ avatar, _id, name, about }, cardsData]) => {\r\n      userInfo.setUserInfo({ name, about, _id, avatar })\r\n      sectionRenderer.rendererItems(cardsData, _id)\r\n    })\r\n    .catch(err => console.error(err))\r\n}\r\n\r\n\r\nconst popupWithImgObj = new PopupWithImage('.popup_target_card-fullscreen')\r\npopupWithImgObj.setEventListeners()\r\nconst popupEditProfile = new PopupWithForm('.popup_target_edit-profile', handleProfileFormSubmit)\r\npopupEditProfile.setEventListeners()\r\nconst popupAddCard = new PopupWithForm('.popup_target_add-card', handleAddCardFormSubmit);\r\npopupAddCard.setEventListeners()\r\nconst popupWithConfirmation = new PopupWithConfirmation('.popup_target_remove-confirmation', deleteCard);\r\npopupWithConfirmation.setEventListeners()\r\nconst popupEditAvatar = new PopupWithForm('.popup_target_edit-avatar', handleAvatarFormSubmit);\r\npopupEditAvatar.setEventListeners()\r\n\r\nconst userInfo = new UserInfo('.profile-info__name', '.profile-info__about', '.profile-info__img');\r\n\r\nconst api = new Api({\r\n  id: 'https://mesto.nomoreparties.co/v1/cohort-45',\r\n  headers: {\r\n    authorization: '4f28713c-cb2d-4ebc-a909-b129b423af46',\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\nconst sectionRenderer = new Section({\r\n  renderer: (item, userId) => {\r\n    const cardElement = createCard({ item, cardsTemplateSelector, openPopupWithImg, openPopupWithConfirmation, apiCardsLike, userId });\r\n\r\n    sectionRenderer.addItem(cardElement)\r\n  },\r\n  cardsContainerSelector,\r\n})\r\n\r\n\r\n\r\neditProfileButton.addEventListener('click', () => {\r\n  const profileInfoData = userInfo.getUserInfo()\r\n\r\n  popupEditProfile.setInputValues(profileInfoData)\r\n  popupEditProfile.open()\r\n})\r\n\r\naddCardButton.addEventListener('click', () => {\r\n  formValidators['card-add'].toggleButtonState()\r\n  popupAddCard.open()\r\n\r\n});\r\n\r\neditAvatarButton.addEventListener('click', () => {\r\n  formValidators['edit-avatar'].toggleButtonState()\r\n\r\n  popupEditAvatar.open()\r\n})\r\n\r\nrenderPage()\r\n\r\n"],"names":["Card","item","cardsTemplateSelector","openPopupWithImg","openPopupWithConfirmation","apiCardsLike","userId","this","_cardLink","link","_cardName","name","_cardSelector","_handleCardClick","_apiCardsLike","_confirmCardRemovement","_userId","_cardOwnerId","owner","_id","_isUserCard","_cardGarbagedeactivateSelector","_cardId","_cardLikes","likes","_cardLikeOwner","_isLiked","some","likeData","document","querySelector","content","cloneNode","_element","_getTemplate","_image","_name","_likeHeart","_cardGarbage","_likeCounter","_setEventListeners","src","alt","textContent","_countLikes","_checkUserLike","_fullfilledLikeLHeart","classList","add","length","toggle","res","remove","addEventListener","e","target","FormValidator","data","formElement","inputElement","validity","valid","_hideInputError","_showInputError","validationMessage","_formSelector","formSelector","_inputSelector","inputSelector","_submitButtonSelector","submitButtonSelector","_inactiveButtonClass","inactiveButtonClass","_inputErrorClass","inputErrorClass","_errorClass","errorClass","_formElement","_inputList","querySelectorAll","_buttonElement","toggleButtonState","forEach","_checkInputValidity","_hasInvalidInput","setAttribute","removeAttribute","errorMessage","errorElement","id","Section","renderer","cardsContainerSelector","_renderer","_container","element","append","prepend","items","userData","Popup","popupSelector","key","close","_popupSelector","_popupCloseButton","matches","_handleEscClose","removeEventListener","PopupWithImage","imageLink","imageText","_figureImage","_figureName","PopupWithForm","handleProfileFormSubmit","_handleProfileFormSubmit","_form","_popupSubmitButton","_popupSubmitButtonAltText","_formValues","input","value","preventDefault","_getInputValues","reset","UserInfo","nameSelector","aboutSelector","avatarSelector","_nameSelector","_aboutSelector","_avatarSelector","_profileNameElement","_profileAboutElement","_profileAvatarElement","_profileData","about","avatar","PopupWithConfirmation","deleteCard","_deleteCard","_currentCard","currentCard","editProfileButton","editAvatarButton","addCardButton","options","Api","headers","_headers","ok","json","Promise","reject","status","fetch","then","_getResponseData","method","body","JSON","stringify","cardId","formValidators","reduce","accum","validator","enableValidation","createCard","generateCard","card","isILiked","api","toggleLike","handleCardLike","catch","err","console","error","popupWithConfirmation","open","setCurrentCard","popupWithImgObj","setEventListeners","popupEditProfile","form__text_type_name","form__text_type_about","switchButtonText","modifyProfile","userInfo","setUserInfo","finally","popupAddCard","getUserId","addNewCard","cardElement","sectionRenderer","prependItem","getCardId","removeCardElement","popupEditAvatar","editAvatar","editProfileAvatar","authorization","addItem","profileInfoData","getUserInfo","setInputValues","all","getInitialCards","cardsData","rendererItems"],"sourceRoot":""}